/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: linuxbluetooth.proto */

#ifndef PROTOBUF_C_linuxbluetooth_2eproto__INCLUDED
#define PROTOBUF_C_linuxbluetooth_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "kismet.pb-c.h"
#include "datasource.pb-c.h"

typedef struct KismetLinuxBluetooth__SubLinuxBluetoothDevice KismetLinuxBluetooth__SubLinuxBluetoothDevice;
typedef struct KismetLinuxBluetooth__LinuxBluetoothDataReport KismetLinuxBluetooth__LinuxBluetoothDataReport;


/* --- enums --- */


/* --- messages --- */

struct  KismetLinuxBluetooth__SubLinuxBluetoothDevice
{
  ProtobufCMessage base;
  uint64_t time_sec;
  uint64_t time_usec;
  char *address;
  char *name;
  int32_t txpower;
  int32_t type;
  size_t n_uuid_list;
  char **uuid_list;
};
#define KISMET_LINUX_BLUETOOTH__SUB_LINUX_BLUETOOTH_DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kismet_linux_bluetooth__sub_linux_bluetooth_device__descriptor) \
, 0, 0, NULL, NULL, 0, 0, 0,NULL }


/*
 * Bluetooth device report, modeled off of the normal data report
 * LBTDATAREPORT
 */
struct  KismetLinuxBluetooth__LinuxBluetoothDataReport
{
  ProtobufCMessage base;
  KismetDatasource__SubGps *gps;
  KismetExternal__MsgbusMessage *message;
  char *warning;
  KismetDatasource__SubSignal *signal;
  KismetLinuxBluetooth__SubLinuxBluetoothDevice *btdevice;
};
#define KISMET_LINUX_BLUETOOTH__LINUX_BLUETOOTH_DATA_REPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&kismet_linux_bluetooth__linux_bluetooth_data_report__descriptor) \
, NULL, NULL, NULL, NULL, NULL }


/* KismetLinuxBluetooth__SubLinuxBluetoothDevice methods */
void   kismet_linux_bluetooth__sub_linux_bluetooth_device__init
                     (KismetLinuxBluetooth__SubLinuxBluetoothDevice         *message);
size_t kismet_linux_bluetooth__sub_linux_bluetooth_device__get_packed_size
                     (const KismetLinuxBluetooth__SubLinuxBluetoothDevice   *message);
size_t kismet_linux_bluetooth__sub_linux_bluetooth_device__pack
                     (const KismetLinuxBluetooth__SubLinuxBluetoothDevice   *message,
                      uint8_t             *out);
size_t kismet_linux_bluetooth__sub_linux_bluetooth_device__pack_to_buffer
                     (const KismetLinuxBluetooth__SubLinuxBluetoothDevice   *message,
                      ProtobufCBuffer     *buffer);
KismetLinuxBluetooth__SubLinuxBluetoothDevice *
       kismet_linux_bluetooth__sub_linux_bluetooth_device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kismet_linux_bluetooth__sub_linux_bluetooth_device__free_unpacked
                     (KismetLinuxBluetooth__SubLinuxBluetoothDevice *message,
                      ProtobufCAllocator *allocator);
/* KismetLinuxBluetooth__LinuxBluetoothDataReport methods */
void   kismet_linux_bluetooth__linux_bluetooth_data_report__init
                     (KismetLinuxBluetooth__LinuxBluetoothDataReport         *message);
size_t kismet_linux_bluetooth__linux_bluetooth_data_report__get_packed_size
                     (const KismetLinuxBluetooth__LinuxBluetoothDataReport   *message);
size_t kismet_linux_bluetooth__linux_bluetooth_data_report__pack
                     (const KismetLinuxBluetooth__LinuxBluetoothDataReport   *message,
                      uint8_t             *out);
size_t kismet_linux_bluetooth__linux_bluetooth_data_report__pack_to_buffer
                     (const KismetLinuxBluetooth__LinuxBluetoothDataReport   *message,
                      ProtobufCBuffer     *buffer);
KismetLinuxBluetooth__LinuxBluetoothDataReport *
       kismet_linux_bluetooth__linux_bluetooth_data_report__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   kismet_linux_bluetooth__linux_bluetooth_data_report__free_unpacked
                     (KismetLinuxBluetooth__LinuxBluetoothDataReport *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*KismetLinuxBluetooth__SubLinuxBluetoothDevice_Closure)
                 (const KismetLinuxBluetooth__SubLinuxBluetoothDevice *message,
                  void *closure_data);
typedef void (*KismetLinuxBluetooth__LinuxBluetoothDataReport_Closure)
                 (const KismetLinuxBluetooth__LinuxBluetoothDataReport *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor kismet_linux_bluetooth__sub_linux_bluetooth_device__descriptor;
extern const ProtobufCMessageDescriptor kismet_linux_bluetooth__linux_bluetooth_data_report__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_linuxbluetooth_2eproto__INCLUDED */
